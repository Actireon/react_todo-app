{"version":3,"sources":["actions/todo.js","reducers/todo.js","reducers/filter.js","actions/filter.js","reducers/index.js","store/index.js","components/Stats/Stats.js","components/Button/Button.js","components/Stopwatch/Stopwatch.js","components/Header/Header.js","containers/HeaderContainer.js","components/FilterLink/FilterLink.js","components/Filter/Filter.js","containers/FilterContainer.js","components/Checkbox/Checkbox.js","components/Todo/Todo.js","components/TodoChecker/TodoChecker.js","components/List/List.js","containers/ListContainer.js","components/Form/Form.js","containers/FormContainer.js","App.js","index.js"],"names":["nextId","todoReducer","state","action","type","id","title","completed","Object","assign","reducer","filter","combineReducers","todos","undefined","index","findIndex","todo","slice","map","getFilteredTodos","fromTodos","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","Stats","total","length","uncompleted","className","Button","props","onClick","children","icon","Stopwatch","running","elapsed","lastTick","tick","now","Date","diff","setState","prevState","handleStart","handlePause","handleStop","format","milliseconds","totalSeconds","Math","floor","minutes","seconds","this","interval","setInterval","clearInterval","time","Component","Header","HeaderContainer","connect","FilterLink","active","Filter","activeFilter","onSetFilter","FilterContainer","dispatch","setFilter","Checkbox","checked","Todo","editing","handleSubmit","event","preventDefault","value","onEdit","handleDelete","onDelete","handleToggle","onToggle","handleEdit","renderDisplay","renderForm","onSubmit","ref","defaultValue","focus","TodoChecker","List","showTodo","key","ListContainer","deleteTodo","toggleTodo","editTodo","Form","onAdd","handleChange","target","disabled","placeholder","onChange","FormContainer","addTodo","App","ReactDOM","render","document","getElementById"],"mappings":"weAKIA,EAAS,ECHPC,EAAc,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCAC1C,OAAQA,EAAOC,MACb,IDJoB,WCKlB,MAAO,CACLC,GAAIF,EAAOE,GACXC,MAAOH,EAAOG,MACdC,WAAW,GAGf,IDTuB,cCUrB,OAAIL,EAAMG,KAAOF,EAAOE,GACfH,EAGFM,OAAOC,OAAO,GAAIP,EAAO,CAC9BK,WAAYL,EAAMK,YAGtB,IDjBqB,YCkBnB,OAAIL,EAAMG,KAAOF,EAAOE,GACfH,EAGFM,OAAOC,OAAO,GAAIP,EAAO,CAC9BI,MAAOH,EAAOG,QAGlB,QACE,OAAOJ,IA6BN,IC/CQQ,EAVC,WAA4B,IAA3BR,EAA0B,uDAAlB,MAAOC,EAAW,uCACzC,OAAQA,EAAOC,MACb,ICJsB,aDKpB,OAAOD,EAAOQ,OAEhB,QACE,OAAOT,IEHPQ,EAAUE,YAAgB,CAC9BC,MH4Ba,WAAsC,IAArBX,EAAoB,uDAAZ,GAAIC,EAAQ,uCAClD,OAAQA,EAAOC,MACb,IDpCoB,WCqClB,MAAM,GAAN,mBAAWF,GAAX,CAAkBD,OAAYa,EAAWX,KAE3C,IDtCuB,cCuCrB,IAAMY,EAAQb,EAAMc,WAAU,SAAAC,GAAI,OAAIA,EAAKZ,KAAOF,EAAOE,MAEzD,MAAM,GAAN,mBACKH,EAAMgB,MAAM,EAAGH,IADpB,YAEKb,EAAMgB,MAAMH,EAAQ,KAI3B,ID9CuB,cCiDvB,IDhDqB,YCiDnB,OAAOb,EAAMiB,KAAI,SAAAF,GAAI,OAAIhB,EAAYgB,EAAMd,MAE7C,QACE,OAAOD,IGhDXS,WAIWS,EAAmB,SAAAlB,GAAK,OHgDL,SAACA,EAAOS,GACtC,OAAQA,GACN,IAAK,MACH,OAAOT,EAET,IAAK,YACH,OAAOA,EAAMS,QAAO,SAAAM,GAAI,OAAIA,EAAKV,aAEnC,IAAK,cACH,OAAOL,EAAMS,QAAO,SAAAM,GAAI,OAAKA,EAAKV,aAEpC,QACE,OAAOL,GG5D4BmB,CAA2BnB,EAAMW,MAAOX,EAAMS,SAExED,I,QCDAY,EAPDC,YACZb,EACAR,EAEAsB,OAAOC,8BAAgCD,OAAOC,gCC6BjCC,G,MAjCD,SAAC,GAAe,IAAbb,EAAY,EAAZA,MACTc,EAAQd,EAAMe,OACdrB,EAAYM,EAAMF,QAAO,SAAAM,GAAI,OAAIA,EAAKV,aAAWqB,OACjDC,EAAcF,EAAQpB,EAE5B,OACE,2BAAOuB,UAAU,SACf,+BACE,4BACE,4CACA,4BAAKH,IAEP,4BACE,0CACA,4BAAKpB,IAEP,4BACE,qCACA,4BAAKsB,Q,mCCaAE,G,MA/BA,SAACC,GAAW,IAEvBF,EAIEE,EAJFF,UACAG,EAGED,EAHFC,QACAC,EAEEF,EAFFE,SACAC,EACEH,EADFG,KAGF,OACE,0CACE/B,KAAK,SACL0B,UAAWA,EACXG,QAASA,GACLD,GAEHG,EACG,uBAAGL,UAAU,kBAAkBK,GAC/BD,KCuEKE,G,iNAtFblC,MAAQ,CACNmC,SAAS,EACTC,QAAS,EACTC,SAAU,G,EAWZC,KAAO,WACL,GAAI,EAAKtC,MAAMmC,QAAS,CACtB,IAAMI,EAAMC,KAAKD,MACXE,EAAOF,EAAM,EAAKvC,MAAMqC,SAE9B,EAAKK,UAAS,SAAAC,GAAS,MAAK,CAC1BP,QAASO,EAAUP,QAAUK,EAC7BJ,SAAUE,Q,EAKhBK,YAAc,WACZ,EAAKF,SAAS,CACZP,SAAS,EACTE,SAAUG,KAAKD,S,EAInBM,YAAc,WACZ,EAAKH,SAAS,CAAEP,SAAS,K,EAG3BW,WAAa,WACX,EAAKJ,SAAS,CACZP,SAAS,EACTC,QAAS,EACTC,SAAU,K,EAIdU,OAAS,SAACC,GACR,IAAMC,EAAeC,KAAKC,MAAMH,EAAe,KACzCI,EAAUF,KAAKC,MAAMF,EAAe,IACpCI,EAAUJ,EAAe,GAG/B,MAAM,GAAN,OAAUG,EAAU,EAAIA,EAAd,WAA4BA,GAAtC,YAAmDC,EAAU,EAAIA,EAAd,WAA4BA,K,mFA5C/EC,KAAKC,SAAWC,YAAYF,KAAKhB,KAAM,O,6CAIvCmB,cAAcH,KAAKC,Y,+BA4CnB,IAAMG,EAAOJ,KAAKP,OAAOO,KAAKtD,MAAMoC,SAEpC,OACE,6BAASR,UAAU,aACjB,yBAAKA,UAAU,mBAAmB8B,GAElC,yBAAK9B,UAAU,uBACZ0B,KAAKtD,MAAMmC,QAER,kBAAC,EAAD,CACEP,UAAU,OACVK,KAAK,QACLF,QAASuB,KAAKT,cAIhB,kBAAC,EAAD,CACEjB,UAAU,OACVK,KAAK,aACLF,QAASuB,KAAKV,cAKpB,kBAAC,EAAD,CAAQhB,UAAU,OAAOK,KAAK,OAAOF,QAASuB,KAAKR,mB,GAhFrCa,cCkBTC,G,MAhBA,SAAC,GAAD,IAAGjD,EAAH,EAAGA,MAAH,OACb,4BAAQiB,UAAU,UAChB,kBAAC,EAAD,CAAOjB,MAAOA,IACd,qCACA,kBAAC,EAAD,SCFWkD,EAFSC,aAJA,SAAA9D,GAAK,MAAK,CAChCW,MAAOX,EAAMW,SAGSmD,CAAyBF,GCalCG,EAlBI,SAAC,GAAD,IAAG3D,EAAH,EAAGA,MAAO4D,EAAV,EAAUA,OAAQjC,EAAlB,EAAkBA,QAASE,EAA3B,EAA2BA,KAA3B,OACjB,4BACE/B,KAAK,SACL0B,UAAWoC,EAAS,YAAc,GAClCjC,QAASA,EACT3B,MAAOA,GAEP,uBAAGwB,UAAU,kBAAkBK,KCyBpBgC,EA9BA,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,YAAjB,OACb,yBAAKvC,UAAU,eACb,kBAAC,EAAD,CACEK,KAAK,OACL+B,OAAyB,QAAjBE,EACR9D,MAAM,cACN2B,QAAS,kBAAMoC,EAAY,UAG7B,kBAAC,EAAD,CACElC,KAAK,YACL+B,OAAyB,cAAjBE,EACR9D,MAAM,YACN2B,QAAS,kBAAMoC,EAAY,gBAG7B,kBAAC,EAAD,CACElC,KAAK,0BACL+B,OAAyB,gBAAjBE,EACR9D,MAAM,OACN2B,QAAS,kBAAMoC,EAAY,oBCVlBC,EAFSN,aARA,SAAA9D,GAAK,MAAK,CAChCkE,aAAclE,EAAMS,WAGK,SAAA4D,GAAQ,MAAK,CACtCF,YAAa,SAAA1D,GAAM,OAAI4D,EVRA,SAAA5D,GAAM,MAAK,CAClCP,KAHwB,aAIxBO,UUMgC6D,CAAU7D,QAGpBqD,CAA6CG,GCGtDM,EAbE,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASzC,EAAZ,EAAYA,QAAZ,OACf,4BAAQ7B,KAAK,SAAS0B,UAAU,gBAAgBG,QAASA,GACvD,uBAAGH,UAAU,kBACV4C,EAAU,YAAc,6BCgFhBC,G,iNA7EbzE,MAAQ,CACN0E,SAAS,G,EASXC,aAAe,SAACC,GACdA,EAAMC,iBAEN,IAAMzE,EAAQ,EAAKA,MAAM0E,MAEzB,EAAKhD,MAAMiD,OAAO,EAAKjD,MAAM3B,GAAIC,GACjC,EAAKsC,SAAS,CAAEgC,SAAS,K,EAG3BM,aAAe,WACb,EAAKlD,MAAMmD,SAAS,EAAKnD,MAAM3B,K,EAGjC+E,aAAe,WACb,EAAKpD,MAAMqD,SAAS,EAAKrD,MAAM3B,K,EAGjCiF,WAAa,WACX,EAAK1C,SAAS,CAAEgC,SAAS,K,EAG3BW,cAAgB,WACd,IAAMzD,EAAS,cAAU,EAAKE,MAAMzB,UAAY,aAAe,IAE/D,OACE,yBAAKuB,UAAWA,GACd,kBAAC,EAAD,CAAU4C,QAAS,EAAK1C,MAAMzB,UAAW0B,QAAS,EAAKmD,eAEvD,0BAAMtD,UAAU,eAAe,EAAKE,MAAM1B,OAE1C,kBAAC,EAAD,CAAQwB,UAAU,YAAYK,KAAK,OAAOF,QAAS,EAAKqD,aACxD,kBAAC,EAAD,CACExD,UAAU,cACVK,KAAK,SACLF,QAAS,EAAKiD,iB,EAMtBM,WAAa,kBACX,0BAAM1D,UAAU,iBAAiB2D,SAAU,EAAKZ,cAC9C,2BACEzE,KAAK,OACLsF,IAAK,SAACA,GACJ,EAAKpF,MAAQoF,GAEfC,aAAc,EAAK3D,MAAM1B,QAE3B,kBAAC,EAAD,CAAQwB,UAAU,YAAYK,KAAK,OAAO/B,KAAK,a,oFAtD7CoD,KAAKtD,MAAM0E,SACbpB,KAAKlD,MAAMsF,U,+BA0Db,OAAOpC,KAAKtD,MAAM0E,QAAUpB,KAAKgC,aAAehC,KAAK+B,oB,GAjEtC1B,cCEJgC,G,MANK,kBAClB,yBAAK/D,UAAU,eAAf,+BCkCagE,EAjCF,SAAC,GAA2C,IAAzCjF,EAAwC,EAAxCA,MAAOsE,EAAiC,EAAjCA,SAAUE,EAAuB,EAAvBA,SAAUJ,EAAa,EAAbA,OACnCc,EAA4B,IAAjBlF,EAAMe,OACnB,kBAAC,EAAD,MACAf,EAAMM,KAAI,SAAAF,GAAI,OACd,kBAAC,EAAD,CACE+E,IAAK/E,EAAKZ,GACVA,GAAIY,EAAKZ,GACTC,MAAOW,EAAKX,MACZC,UAAWU,EAAKV,UAChB4E,SAAUA,EACVE,SAAUA,EACVJ,OAAQA,OAId,OACE,6BAASnD,UAAU,aAChBiE,ICLQE,EAFOjC,aAVE,SAAA9D,GAAK,MAAK,CAChCW,MAAOO,EAAiBlB,OAGC,SAAAqE,GAAQ,MAAK,CACtCY,SAAU,SAAA9E,GAAE,OAAIkE,ElBGQ,SAAAlE,GAAE,MAAK,CAC/BD,KAdyB,cAezBC,MkBLyB6F,CAAW7F,KACpCgF,SAAU,SAAAhF,GAAE,OAAIkE,ElBOQ,SAAAlE,GAAE,MAAK,CAC/BD,KAlByB,cAmBzBC,MkBTyB8F,CAAW9F,KACpC4E,OAAQ,SAAC5E,EAAIC,GAAL,OAAeiE,ElBWD,SAAClE,EAAIC,GAAL,MAAgB,CACtCF,KAtBuB,YAuBvBC,KACAC,SkBdgC8F,CAAS/F,EAAIC,QAGzB0D,CAA6C8B,GCmCpDO,G,iNA3CbnG,MAAQ,CACNI,MAAO,I,EAGTuE,aAAe,SAACC,GACdA,EAAMC,iBADkB,IAGhBzE,EAAU,EAAKJ,MAAfI,MAEJA,IACF,EAAK0B,MAAMsE,MAAMhG,GACjB,EAAKsC,SAAS,CAAEtC,MAAO,O,EAI3BiG,aAAe,SAACzB,GACd,IAAMxE,EAAQwE,EAAM0B,OAAOxB,MAE3B,EAAKpC,SAAS,CAAEtC,W,wEAIhB,IAAMmG,GAAYjD,KAAKtD,MAAMI,MAE7B,OACE,0BAAMwB,UAAU,gBAAgB2D,SAAUjC,KAAKqB,cAC7C,2BACEzE,KAAK,OACL4E,MAAOxB,KAAKtD,MAAMI,MAClBoG,YAAY,yBACZC,SAAUnD,KAAK+C,eAGjB,kBAAC,EAAD,CAAQnG,KAAK,SAASqG,SAAUA,GAAhC,Y,GAlCW5C,cCIJ+C,EAFO5C,YAAQ,MAJH,SAAAO,GAAQ,MAAK,CACtC+B,MAAO,SAAAhG,GAAK,OAAIiE,EpBCK,SAAAjE,GAAK,MAAK,CAC/BF,KARsB,WAUtBC,GAAIL,IACJM,SoBLyBuG,CAAQvG,QAGb0D,CAAkCqC,GCOzCS,EATH,kBACV,0BAAMhF,UAAU,QACd,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCLJiF,IAASC,OACP,kBAAC,IAAD,CAAU1F,MAAOA,GACf,kBAAC,EAAD,OAGF2F,SAASC,eAAe,W","file":"static/js/main.54a86886.chunk.js","sourcesContent":["export const ADD_TODO = 'ADD_TODO';\nexport const DELETE_TODO = 'DELETE_TODO';\nexport const TOGGLE_TODO = 'TOGGLE_TODO';\nexport const EDIT_TODO = 'EDIT_TODO';\n\nlet nextId = 2;\n\nexport const addTodo = title => ({\n  type: ADD_TODO,\n  // eslint-disable-next-line no-plusplus\n  id: nextId++,\n  title,\n});\n\nexport const deleteTodo = id => ({\n  type: DELETE_TODO,\n  id,\n});\n\nexport const toggleTodo = id => ({\n  type: TOGGLE_TODO,\n  id,\n});\n\nexport const editTodo = (id, title) => ({\n  type: EDIT_TODO,\n  id,\n  title,\n});\n","import { ADD_TODO, DELETE_TODO, EDIT_TODO, TOGGLE_TODO } from '../actions';\n\nconst todoReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      return {\n        id: action.id,\n        title: action.title,\n        completed: false,\n      };\n\n    case TOGGLE_TODO:\n      if (state.id !== action.id) {\n        return state;\n      }\n\n      return Object.assign({}, state, {\n        completed: !state.completed,\n      });\n\n    case EDIT_TODO:\n      if (state.id !== action.id) {\n        return state;\n      }\n\n      return Object.assign({}, state, {\n        title: action.title,\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default function reducer(state = [], action) {\n  switch (action.type) {\n    case ADD_TODO:\n      return [...state, todoReducer(undefined, action)];\n\n    case DELETE_TODO: {\n      const index = state.findIndex(todo => todo.id === action.id);\n\n      return [\n        ...state.slice(0, index),\n        ...state.slice(index + 1),\n      ];\n    }\n\n    case TOGGLE_TODO:\n      return state.map(todo => todoReducer(todo, action));\n\n    case EDIT_TODO:\n      return state.map(todo => todoReducer(todo, action));\n\n    default:\n      return state;\n  }\n}\n\nexport const getFilteredTodos = (state, filter) => {\n  switch (filter) {\n    case 'ALL':\n      return state;\n\n    case 'COMPLETED':\n      return state.filter(todo => todo.completed);\n\n    case 'UNCOMPLETED':\n      return state.filter(todo => !todo.completed);\n\n    default:\n      return state;\n  }\n};\n","import { SET_FILTER } from '../actions';\n\nconst reducer = (state = 'ALL', action) => {\n  switch (action.type) {\n    case SET_FILTER:\n      return action.filter;\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","export const SET_FILTER = 'SET_FILTER';\n\nexport const setFilter = filter => ({\n  type: SET_FILTER,\n  filter,\n});\n","import { combineReducers } from 'redux';\n\nimport todos, * as fromTodos from './todo';\nimport filter from './filter';\n\nconst reducer = combineReducers({\n  todos,\n  filter,\n});\n\n// eslint-disable-next-line max-len\nexport const getFilteredTodos = state => fromTodos.getFilteredTodos(state.todos, state.filter);\n\nexport default reducer;\n","import { createStore } from 'redux';\n\nimport reducer from '../reducers';\nimport state from './state';\n\nconst store = createStore(\n  reducer,\n  state,\n  // eslint-disable-next-line no-underscore-dangle\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Stats.css';\n\nconst Stats = ({ todos }) => {\n  const total = todos.length;\n  const completed = todos.filter(todo => todo.completed).length;\n  const uncompleted = total - completed;\n\n  return (\n    <table className=\"stats\">\n      <tbody>\n        <tr>\n          <th>Total tasks:</th>\n          <td>{total}</td>\n        </tr>\n        <tr>\n          <th>Completed:</th>\n          <td>{completed}</td>\n        </tr>\n        <tr>\n          <th>Left:</th>\n          <td>{uncompleted}</td>\n        </tr>\n      </tbody>\n    </table>\n  );\n};\n\nStats.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  })).isRequired,\n};\n\nexport default Stats;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Button.css';\n\nconst Button = (props) => {\n  const {\n    className,\n    onClick,\n    children,\n    icon,\n  } = props;\n\n  return (\n    <button\n      type=\"button\"\n      className={className}\n      onClick={onClick}\n      {...props}\n    >\n      {icon\n        ? <i className=\"material-icons\">{icon}</i>\n        : children\n      }\n    </button>\n  );\n};\n\nButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string.isRequired,\n  icon: PropTypes.string.isRequired,\n  disabled: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import React, { Component } from 'react';\n\nimport Button from '../Button/Button';\n\nimport './Stopwatch.css';\n\nclass Stopwatch extends Component {\n  state = {\n    running: false,\n    elapsed: 0,\n    lastTick: 0,\n  };\n\n  componentDidMount() {\n    this.interval = setInterval(this.tick, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  tick = () => {\n    if (this.state.running) {\n      const now = Date.now();\n      const diff = now - this.state.lastTick;\n\n      this.setState(prevState => ({\n        elapsed: prevState.elapsed + diff,\n        lastTick: now,\n      }));\n    }\n  }\n\n  handleStart = () => {\n    this.setState({\n      running: true,\n      lastTick: Date.now(),\n    });\n  }\n\n  handlePause = () => {\n    this.setState({ running: false });\n  }\n\n  handleStop = () => {\n    this.setState({\n      running: false,\n      elapsed: 0,\n      lastTick: 0,\n    });\n  }\n\n  format = (milliseconds) => {\n    const totalSeconds = Math.floor(milliseconds / 1000);\n    const minutes = Math.floor(totalSeconds / 60);\n    const seconds = totalSeconds % 60;\n\n    // eslint-disable-next-line max-len\n    return `${minutes > 9 ? minutes : `0${minutes}`}:${seconds > 9 ? seconds : `0${seconds}`}`;\n  }\n\n  render() {\n    const time = this.format(this.state.elapsed);\n\n    return (\n      <section className=\"stopwatch\">\n        <div className=\"stopwatch__time\">{time}</div>\n\n        <div className=\"stopwatch__controls\">\n          {this.state.running\n            ? (\n              <Button\n                className=\"icon\"\n                icon=\"pause\"\n                onClick={this.handlePause}\n              />\n            )\n            : (\n              <Button\n                className=\"icon\"\n                icon=\"play_arrow\"\n                onClick={this.handleStart}\n              />\n            )\n          }\n\n          <Button className=\"icon\" icon=\"stop\" onClick={this.handleStop} />\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Stopwatch;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Stats from '../Stats/Stats';\nimport Stopwatch from '../Stopwatch/Stopwatch';\n\nimport './Header.css';\n\nconst Header = ({ todos }) => (\n  <header className=\"header\">\n    <Stats todos={todos} />\n    <h1>TODOS</h1>\n    <Stopwatch />\n  </header>\n);\n\nHeader.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  })).isRequired,\n};\n\nexport default Header;\n","import { connect } from 'react-redux';\n\nimport Header from '../components/Header/Header';\n\nconst mapStateToProps = state => ({\n  todos: state.todos,\n});\n\nconst HeaderContainer = connect(mapStateToProps)(Header);\n\nexport default HeaderContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst FilterLink = ({ title, active, onClick, icon }) => (\n  <button\n    type=\"button\"\n    className={active ? 'is-active' : ''}\n    onClick={onClick}\n    title={title}\n  >\n    <i className=\"material-icons\">{icon}</i>\n  </button>\n);\n\nFilterLink.propTypes = {\n  title: PropTypes.string.isRequired,\n  icon: PropTypes.string.isRequired,\n  active: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default FilterLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport FilterLink from '../FilterLink/FilterLink';\n\nconst Filter = ({ activeFilter, onSetFilter }) => (\n  <div className=\"todo-filter\">\n    <FilterLink\n      icon=\"list\"\n      active={activeFilter === 'ALL'}\n      title=\"TOTAL TASKS\"\n      onClick={() => onSetFilter('ALL')}\n    />\n\n    <FilterLink\n      icon=\"check_box\"\n      active={activeFilter === 'COMPLETED'}\n      title=\"COMPLETED\"\n      onClick={() => onSetFilter('COMPLETED')}\n    />\n\n    <FilterLink\n      icon=\"check_box_outline_blank\"\n      active={activeFilter === 'UNCOMPLETED'}\n      title=\"LEFT\"\n      onClick={() => onSetFilter('UNCOMPLETED')}\n    />\n  </div>\n);\n\nFilter.propTypes = {\n  activeFilter: PropTypes.string.isRequired,\n  onSetFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { connect } from 'react-redux';\n\nimport { setFilter } from '../actions';\nimport Filter from '../components/Filter/Filter';\n\nconst mapStateToProps = state => ({\n  activeFilter: state.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSetFilter: filter => dispatch(setFilter(filter)),\n});\n\nconst FilterContainer = connect(mapStateToProps, mapDispatchToProps)(Filter);\n\nexport default FilterContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Checkbox = ({ checked, onClick }) => (\n  <button type=\"button\" className=\"checkbox icon\" onClick={onClick}>\n    <i className=\"material-icons\">\n      {checked ? 'check_box' : 'check_box_outline_blank'}\n    </i>\n  </button>\n);\n\nCheckbox.propTypes = {\n  checked: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Checkbox;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Checkbox from '../Checkbox/Checkbox';\nimport Button from '../Button/Button';\n\nimport './Todo.css';\n\nclass Todo extends Component {\n  state = {\n    editing: false,\n  };\n\n  componentDidUpdate() {\n    if (this.state.editing) {\n      this.title.focus();\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const title = this.title.value;\n\n    this.props.onEdit(this.props.id, title);\n    this.setState({ editing: false });\n  }\n\n  handleDelete = () => {\n    this.props.onDelete(this.props.id);\n  }\n\n  handleToggle = () => {\n    this.props.onToggle(this.props.id);\n  }\n\n  handleEdit = () => {\n    this.setState({ editing: true });\n  }\n\n  renderDisplay = () => {\n    const className = `todo${this.props.completed ? ' completed' : ''}`;\n\n    return (\n      <div className={className}>\n        <Checkbox checked={this.props.completed} onClick={this.handleToggle} />\n\n        <span className=\"todo__title\">{this.props.title}</span>\n\n        <Button className=\"edit icon\" icon=\"edit\" onClick={this.handleEdit} />\n        <Button\n          className=\"delete icon\"\n          icon=\"delete\"\n          onClick={this.handleDelete}\n        />\n      </div>\n    );\n  }\n\n  renderForm = () => (\n    <form className=\"todo-edit-form\" onSubmit={this.handleSubmit}>\n      <input\n        type=\"text\"\n        ref={(ref) => {\n          this.title = ref;\n        }}\n        defaultValue={this.props.title}\n      />\n      <Button className=\"save icon\" icon=\"save\" type=\"submit\" />\n    </form>\n  )\n\n  render() {\n    return this.state.editing ? this.renderForm() : this.renderDisplay();\n  }\n}\n\nTodo.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onToggle: PropTypes.func.isRequired,\n  onEdit: PropTypes.func.isRequired,\n};\n\nexport default Todo;\n","import React from 'react';\n\nimport './TodoChecker.css';\n\nconst TodoChecker = () => (\n  <div className=\"todoChecker\">\n    The current list is empty\n  </div>\n);\n\nexport default TodoChecker;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Todo from '../Todo/Todo';\nimport TodoChecker from '../TodoChecker/TodoChecker';\n\nconst List = ({ todos, onDelete, onToggle, onEdit }) => {\n  const showTodo = todos.length === 0\n    ? <TodoChecker />\n    : todos.map(todo => (\n      <Todo\n        key={todo.id}\n        id={todo.id}\n        title={todo.title}\n        completed={todo.completed}\n        onDelete={onDelete}\n        onToggle={onToggle}\n        onEdit={onEdit}\n      />\n    ));\n\n  return (\n    <section className=\"todo-list\">\n      {showTodo}\n    </section>\n  );\n};\n\nList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  })).isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onToggle: PropTypes.func.isRequired,\n  onEdit: PropTypes.func.isRequired,\n};\n\nexport default List;\n","import { connect } from 'react-redux';\n\nimport { deleteTodo, toggleTodo, editTodo } from '../actions';\nimport { getFilteredTodos } from '../reducers';\nimport List from '../components/List/List';\n\nconst mapStateToProps = state => ({\n  todos: getFilteredTodos(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDelete: id => dispatch(deleteTodo(id)),\n  onToggle: id => dispatch(toggleTodo(id)),\n  onEdit: (id, title) => dispatch(editTodo(id, title)),\n});\n\nconst ListContainer = connect(mapStateToProps, mapDispatchToProps)(List);\n\nexport default ListContainer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '../Button/Button';\n\nimport './Form.css';\n\nclass Form extends Component {\n  state = {\n    title: '',\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { title } = this.state;\n\n    if (title) {\n      this.props.onAdd(title);\n      this.setState({ title: '' });\n    }\n  }\n\n  handleChange = (event) => {\n    const title = event.target.value;\n\n    this.setState({ title });\n  }\n\n  render() {\n    const disabled = !this.state.title;\n\n    return (\n      <form className=\"todo-add-form\" onSubmit={this.handleSubmit}>\n        <input\n          type=\"text\"\n          value={this.state.title}\n          placeholder=\"What needs to be done?\"\n          onChange={this.handleChange}\n        />\n\n        <Button type=\"submit\" disabled={disabled}>Add</Button>\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import { connect } from 'react-redux';\n\nimport { addTodo } from '../actions';\nimport Form from '../components/Form/Form';\n\nconst mapDispatchToProps = dispatch => ({\n  onAdd: title => dispatch(addTodo(title)),\n});\n\nconst FormContainer = connect(null, mapDispatchToProps)(Form);\n\nexport default FormContainer;\n","import React from 'react';\n\nimport HeaderContainer from './containers/HeaderContainer';\nimport FilterContainer from './containers/FilterContainer';\nimport ListContainer from './containers/ListContainer';\nimport FormContainer from './containers/FormContainer';\n\nconst App = () => (\n  <main className=\"main\">\n    <HeaderContainer />\n    <FilterContainer />\n    <ListContainer />\n    <FormContainer />\n  </main>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './store';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}